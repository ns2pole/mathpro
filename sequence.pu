@startuml{TEST2.png}
title 中央制御のシーケンス図
hide footbox

participant ": BreadthFirstSearchComponent" as BreadthFirstSearchComponent
participant ": Plane" as Plane
participant ": Labyrinth2D" as Labyrinth2D
participant ": Vertex" as Vertex
participant ": Square" as Square

activate BreadthFirstSearchComponent
activate Plane
BreadthFirstSearchComponent -> Plane : new plane()
Plane -> Labyrinth2D : this.lab.draw\n(p : p5)
Labyrinth2D -> Square : this[i][j].draw\n(p : p5)

BreadthFirstSearchComponent -> Plane : solveByBreadthFirstSearch()
Plane -> Labyrinth2D : solveByBreadthFirstSearch()
Labyrinth2D -> Vertex : Vertex.breadthFirstSearch\n(start : number, goal : number, this : Labyrinth2D)

Vertex -> Vertex : new Vertex(fromId).getFastestPathTo\n(toId, lab)
Vertex -> Vertex : this.getAllFastestPathsByBreadFirstlyPathTo\n(vertexId, lab)
Vertex -> Vertex : Vertex.evolute\n(idSequences : Set<Array<number>>, ad : AdjacentMatrix)

BreadthFirstSearchComponent -> Plane : plane.draw\n(p: p5, path: Array<number>)

activate Labyrinth2D
Plane -> Labyrinth2D : this.lab.draw\n(p : p5)
Labyrinth2D -> Square : this[i][j].draw\n(p : p5)
BreadthFirstSearchComponent -> BreadthFirstSearchComponent : p.noloop()
BreadthFirstSearchComponent -> BreadthFirstSearchComponent : new p5(sketch)

